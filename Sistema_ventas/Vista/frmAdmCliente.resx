<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>