<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AElFTkSuQmCC
</value>
  </data>
</root>