<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        gg==
</value>
  </data>
</root>