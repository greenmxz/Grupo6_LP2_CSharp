<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        hCEACEIQAIQhAAhCEACEIQAIQhAH/9k=
</value>
  </data>
</root>