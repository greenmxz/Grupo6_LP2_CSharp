<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        Eahp/h/65xdn8J1TmQAAAABJRU5ErkJggg==
</value>
  </data>
  <metadata name="dgvProvCod.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="dgvProvRUC.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="dgvProvRazSoc.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
</root>