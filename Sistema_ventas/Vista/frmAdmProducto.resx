<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAASUVORK5CYII=
</value>
  </data>
</root>