<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        OPwfv3otNTGVshUAAAAASUVORK5CYII=
</value>
  </data>
</root>